{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport CodeProModal from \"./modal\";\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {baseUrl} from './common';\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023 Josep Mulet Pol <pmulet@iedib.net>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    // TODO: Load components here\n    displayDialogue(editor);\n};\n\nconst displayDialogue = async(editor) => {\n    const elementid = \"codepro_\" + editor.id;\n    const data = {\n        elementid: elementid\n    };\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n            type: CodeProModal.TYPE,\n            templateContext: data,\n            large: true,\n        });\n        console.log(\"The root of modal\", modal, modal.getRoot());\n        modal.getRoot().find('div.modal-dialog').css({\n            maxWidth: '100%',\n            margin: 0\n        });\n        // modal.getRoot().find('div.modal-footer').removeClass(\"hidden\");\n        modal.footer.show();\n\n    // Need to load extension of Monaco\n    if (!window.MonacoEditorEx) {\n        const monacoexScript = document.createElement(\"script\");\n        monacoexScript.src = baseUrl + '/assets/monaco-editor-ex.js';\n        monacoexScript.onload = () => onLazyLoadMonaco(editor, modal);\n        document.querySelector(\"head\").appendChild(monacoexScript);\n    } else {\n        onLazyLoadMonaco(editor, modal);\n    }\n};\n\nconst onLazyLoadMonaco = function(editor, modal) {\n\n    // initialize the editor\n    require.config({paths: {\n        vs: baseUrl + '/assets/monaco-editor/min/vs'\n        }\n    });\n    require(['vs/editor/editor.main'], function() {\n        MonacoEditorEx.useMonacoEx(monaco);\n        modal.show();\n        setTimeout(() => {\n                console.log(\"creant l'editor ara\");\n                const vseditor = monaco.editor.create(document.getElementById(\"codepro_\" + editor.id), {\n                    value: editor.getContent(),\n                    language: 'html',\n                    automaticLayout: true,\n                    theme: \"vs-light\",\n                });\n            modal.onresize = function() {\n                vseditor.layout();\n            };\n            modal.getRoot().find(\"button.btn\").on(\"click\", (evt)=>{\n                if (evt.target.classList.contains(\"btn-primary\")) {\n                    const newContent = vseditor.getValue();\n                    console.log(newContent);\n                    editor.setContent(newContent, {format: 'html'});\n                }\n                modal.hide();\n                vseditor.getModel().dispose();\n                modal.destroy();\n            });\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                vseditor.getModel().dispose();\n                modal.destroy();\n            });\n        }, 500);\n\n    });\n\n};\n"],"names":["editor","displayDialogue","async","data","elementid","id","modal","ModalFactory","create","type","CodeProModal","TYPE","templateContext","large","console","log","getRoot","find","css","maxWidth","margin","footer","show","window","MonacoEditorEx","onLazyLoadMonaco","monacoexScript","document","createElement","src","baseUrl","onload","querySelector","appendChild","require","config","paths","vs","useMonacoEx","monaco","setTimeout","vseditor","getElementById","value","getContent","language","automaticLayout","theme","onresize","layout","on","evt","target","classList","contains","newContent","getValue","setContent","format","hide","getModel","dispose","destroy","ModalEvents","hidden"],"mappings":";;;;;;;gQAkC6BA,SAEzBC,gBAAgBD,eAGdC,gBAAkBC,MAAAA,eAEdC,KAAO,CACTC,UAFc,WAAaJ,OAAOK,IAMhCC,YAAcC,uBAAaC,OAAO,CAChCC,KAAMC,eAAaC,KACnBC,gBAAiBT,KACjBU,OAAO,OAEXC,QAAQC,IAAI,oBAAqBT,MAAOA,MAAMU,WAC9CV,MAAMU,UAAUC,KAAK,oBAAoBC,IAAI,CACzCC,SAAU,OACVC,OAAQ,IAGZd,MAAMe,OAAOC,OAGZC,OAAOC,eAMRC,iBAAiBzB,OAAQM,WAND,OAClBoB,eAAiBC,SAASC,cAAc,UAC9CF,eAAeG,IAAMC,gBAAU,8BAC/BJ,eAAeK,OAAS,IAAMN,iBAAiBzB,OAAQM,OACvDqB,SAASK,cAAc,QAAQC,YAAYP,kBAM7CD,iBAAmB,SAASzB,OAAQM,OAGtC4B,QAAQC,OAAO,CAACC,MAAO,CACnBC,GAAIP,gBAAU,kCAGlBI,QAAQ,CAAC,0BAA0B,WAC/BV,eAAec,YAAYC,QAC3BjC,MAAMgB,OACNkB,YAAW,KACH1B,QAAQC,IAAI,6BACN0B,SAAWF,OAAOvC,OAAOQ,OAAOmB,SAASe,eAAe,WAAa1C,OAAOK,IAAK,CACnFsC,MAAO3C,OAAO4C,aACdC,SAAU,OACVC,iBAAiB,EACjBC,MAAO,aAEfzC,MAAM0C,SAAW,WACbP,SAASQ,UAEb3C,MAAMU,UAAUC,KAAK,cAAciC,GAAG,SAAUC,SACxCA,IAAIC,OAAOC,UAAUC,SAAS,eAAgB,OACxCC,WAAad,SAASe,WAC5B1C,QAAQC,IAAIwC,YACZvD,OAAOyD,WAAWF,WAAY,CAACG,OAAQ,SAE3CpD,MAAMqD,OACNlB,SAASmB,WAAWC,UACpBvD,MAAMwD,aAEVxD,MAAMU,UAAUkC,GAAGa,sBAAYC,QAAQ,KACnCvB,SAASmB,WAAWC,UACpBvD,MAAMwD,eAEX"}