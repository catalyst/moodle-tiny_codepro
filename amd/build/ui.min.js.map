{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport CodeProModal from \"./modal\";\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {baseUrl} from './common';\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023 Josep Mulet Pol <pmulet@iedib.net>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nlet modal = null;\nlet codeEditorInstance = null;\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    console.log(\"handleAction\");\n    if (modal === null) {\n        console.log(\"createDialogue\");\n        createDialogue(editor);\n    } else {\n        console.log(\"Showing dialogue\");\n        modal.show();\n        codeEditorInstance.setValue(editor);\n    }\n};\n\nconst createDialogue = async (editor) => {\n    console.log(\"createDialogue....\");\n    const elementid = \"codepro_editorroot\";\n    const data = {\n        elementid: elementid\n    };\n\n    // Show modal with buttons.\n    modal = await ModalFactory.create({\n        type: CodeProModal.TYPE,\n        templateContext: data,\n        large: true,\n    });\n\n    // Load cm6 on demand\n    require.config({\n        paths: {\n            cm6: baseUrl + '/vendor/codemirror6/dist/cm6-lazy.min'\n        }\n    });\n    require(['cm6'], (CodeProEditor) => {\n        console.log(\"cm6 loaded: \", CodeProEditor);\n        // Setting themes\n        const themeSelector = modal.footer.find(\"select\");\n        modal.getRoot().find(\".modal-dialog.modal-lg\").css(\"max-width\", \"90%\");\n        // Disable ESC key on this modal\n        modal.getRoot().off('keydown');\n\n        const targetElem = modal.body.find('#' + elementid)[0];\n\n        codeEditorInstance = new CodeProEditor(targetElem);\n        themeSelector.on(\"change\", (evt) => {\n            codeEditorInstance.setTheme(evt.target.value);\n        });\n        modal.footer.find(\"button.btn[data-action]\").on(\"click\", (evt) => {\n            if (evt.target.classList.contains(\"btn-primary\")) {\n                codeEditorInstance.updateContent();\n            }\n            modal.hide();\n            codeEditorInstance.setValue();\n        });\n        modal.footer.find(\"button.btn.btn-light\").on(\"click\", (evt) => {\n            evt.preventDefault();\n            const ds = evt.currentTarget.dataset;\n            const icon = evt.currentTarget.querySelector(\"i.fa\");\n            if (ds.fs) {\n                if (ds.fs === \"false\") {\n                    // Go to FS\n                    ds.fs = \"true\";\n                    modal.header.hide();\n                    modal.getRoot().find('[role=\"document\"]').removeClass(\"modal-dialog modal-lg modal-dialog-scrollable\");\n                    modal.getRoot().find('[role=\"document\"]').addClass(\"tiny_codepro-fullscreen\");\n                } else {\n                    // Return to modal\n                    ds.fs = \"false\";\n                    modal.header.show();\n                    modal.getRoot().find('[role=\"document\"]').removeClass(\"tiny_codepro-fullscreen\");\n                    modal.getRoot().find('[role=\"document\"]').addClass(\"modal-dialog modal-lg modal-dialog-scrollable\");\n                }\n            } else if (ds.theme) {\n                if (ds.theme === \"light\") {\n                    ds.theme = \"dark\";\n                    icon.classList.remove(\"fa-sun-o\");\n                    icon.classList.add(\"fa-moon-o\");\n                    codeEditorInstance.setTheme(\"dark\");\n                    modal.getRoot().find('[role=\"document\"]').addClass(\"tiny_codepro-dark\");\n                } else {\n                    ds.theme = \"light\";\n                    icon.classList.remove(\"fa-moon-o\");\n                    icon.classList.add(\"fa-sun-o\");\n                    codeEditorInstance.setTheme(\"light\");\n                    modal.getRoot().find('[role=\"document\"]').removeClass(\"tiny_codepro-dark\");\n                }\n            } else if (ds.wrap) {\n                if (ds.wrap === \"true\") {\n                    ds.wrap = false;\n                    codeEditorInstance.setLineWrapping(false);\n                    icon.classList.remove(\"fa-exchange\");\n                    icon.classList.add(\"fa-long-arrow-right\");\n                } else {\n                    ds.wrap = true;\n                    codeEditorInstance.setLineWrapping(true);\n                    icon.classList.add(\"fa-exchange\");\n                    icon.classList.remove(\"fa-long-arrow-right\");\n                }\n            }\n        });\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            codeEditorInstance.setValue();\n        });\n\n        console.log(\"setting and showing\");\n        modal.show();\n        codeEditorInstance.setValue(editor);\n    });\n};"],"names":["modal","codeEditorInstance","editor","console","log","createDialogue","show","setValue","async","data","elementid","ModalFactory","create","type","CodeProModal","TYPE","templateContext","large","require","config","paths","cm6","baseUrl","CodeProEditor","themeSelector","footer","find","getRoot","css","off","targetElem","body","on","evt","setTheme","target","value","classList","contains","updateContent","hide","preventDefault","ds","currentTarget","dataset","icon","querySelector","fs","header","removeClass","addClass","theme","remove","add","wrap","setLineWrapping","ModalEvents","hidden"],"mappings":";;;;;;;8OA8BIA,MAAQ,KACRC,mBAAqB,2BAMIC,SACzBC,QAAQC,IAAI,gBACE,OAAVJ,OACAG,QAAQC,IAAI,kBACZC,eAAeH,UAEfC,QAAQC,IAAI,oBACZJ,MAAMM,OACNL,mBAAmBM,SAASL,gBAI9BG,eAAiBG,MAAAA,SACnBL,QAAQC,IAAI,4BAENK,KAAO,CACTC,UAFc,sBAMlBV,YAAcW,uBAAaC,OAAO,CAC9BC,KAAMC,eAAaC,KACnBC,gBAAiBP,KACjBQ,OAAO,IAIXC,QAAQC,OAAO,CACXC,MAAO,CACHC,IAAKC,gBAAU,2CAGvBJ,QAAQ,CAAC,QAASK,gBACdpB,QAAQC,IAAI,eAAgBmB,qBAEtBC,cAAgBxB,MAAMyB,OAAOC,KAAK,UACxC1B,MAAM2B,UAAUD,KAAK,0BAA0BE,IAAI,YAAa,OAEhE5B,MAAM2B,UAAUE,IAAI,iBAEdC,WAAa9B,MAAM+B,KAAKL,KAAK,uBAAiB,GAEpDzB,mBAAqB,IAAIsB,cAAcO,YACvCN,cAAcQ,GAAG,UAAWC,MACxBhC,mBAAmBiC,SAASD,IAAIE,OAAOC,UAE3CpC,MAAMyB,OAAOC,KAAK,2BAA2BM,GAAG,SAAUC,MAClDA,IAAIE,OAAOE,UAAUC,SAAS,gBAC9BrC,mBAAmBsC,gBAEvBvC,MAAMwC,OACNvC,mBAAmBM,cAEvBP,MAAMyB,OAAOC,KAAK,wBAAwBM,GAAG,SAAUC,MACnDA,IAAIQ,uBACEC,GAAKT,IAAIU,cAAcC,QACvBC,KAAOZ,IAAIU,cAAcG,cAAc,QACzCJ,GAAGK,GACW,UAAVL,GAAGK,IAEHL,GAAGK,GAAK,OACR/C,MAAMgD,OAAOR,OACbxC,MAAM2B,UAAUD,KAAK,qBAAqBuB,YAAY,iDACtDjD,MAAM2B,UAAUD,KAAK,qBAAqBwB,SAAS,6BAGnDR,GAAGK,GAAK,QACR/C,MAAMgD,OAAO1C,OACbN,MAAM2B,UAAUD,KAAK,qBAAqBuB,YAAY,2BACtDjD,MAAM2B,UAAUD,KAAK,qBAAqBwB,SAAS,kDAEhDR,GAAGS,MACO,UAAbT,GAAGS,OACHT,GAAGS,MAAQ,OACXN,KAAKR,UAAUe,OAAO,YACtBP,KAAKR,UAAUgB,IAAI,aACnBpD,mBAAmBiC,SAAS,QAC5BlC,MAAM2B,UAAUD,KAAK,qBAAqBwB,SAAS,uBAEnDR,GAAGS,MAAQ,QACXN,KAAKR,UAAUe,OAAO,aACtBP,KAAKR,UAAUgB,IAAI,YACnBpD,mBAAmBiC,SAAS,SAC5BlC,MAAM2B,UAAUD,KAAK,qBAAqBuB,YAAY,sBAEnDP,GAAGY,OACM,SAAZZ,GAAGY,MACHZ,GAAGY,MAAO,EACVrD,mBAAmBsD,iBAAgB,GACnCV,KAAKR,UAAUe,OAAO,eACtBP,KAAKR,UAAUgB,IAAI,yBAEnBX,GAAGY,MAAO,EACVrD,mBAAmBsD,iBAAgB,GACnCV,KAAKR,UAAUgB,IAAI,eACnBR,KAAKR,UAAUe,OAAO,4BAIlCpD,MAAM2B,UAAUK,GAAGwB,sBAAYC,QAAQ,KACnCxD,mBAAmBM,cAGvBJ,QAAQC,IAAI,uBACZJ,MAAMM,OACNL,mBAAmBM,SAASL"}