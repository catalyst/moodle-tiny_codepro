{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport CodeProModal from \"./modal\";\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {baseUrl} from './common';\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023 Josep Mulet Pol <pmulet@iedib.net>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    // TODO: Load components here\n    displayDialogue(editor);\n};\n\nconst displayDialogue = async (editor) => {\n    const elementid = \"codepro_\" + editor.id;\n    const data = {\n        elementid: elementid\n    };\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n            type: CodeProModal.TYPE,\n            templateContext: data,\n            large: true,\n        });\n        console.log(\"The root of modal\", modal, modal.getRoot());\n        modal.getRoot().find('div.modal-dialog').css({\n            maxWidth: '100%',\n            margin: 0\n        });\n        modal.header.hide();\n        modal.footer.show();\n\n        const monaco = await lazyLoadMonaco();\n\n        console.log(\"creant l'editor ara\");\n        const vseditor = monaco.editor.create(modal.body.find(\"#codepro_\" + editor.id)[0], {\n            value: editor.getContent(),\n            language: 'html',\n            automaticLayout: true,\n            theme: \"vs-light\",\n        });\n        modal.onresize = function() {\n            vseditor.layout();\n        };\n        modal.footer.find(\"button.btn\").on(\"click\", (evt)=>{\n            if (evt.target.classList.contains(\"btn-primary\")) {\n                const newContent = vseditor.getValue();\n                console.log(newContent);\n                editor.setContent(newContent, {format: 'html'});\n            }\n            modal.hide();\n            vseditor.dispose();\n            modal.destroy();\n        });\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            vseditor.dispose();\n            modal.destroy();\n        });\n        modal.show();\n\n};\n\nconst lazyLoadMonaco = function() {\n    return new Promise((resolve)=> {\n        if (!window.monaco || !window.MonacoEditorEx) {\n            require.config({paths:\n                {\n                    vs: baseUrl + '/amd/assets/monaco-editor/min/vs',\n                    tiny_codepro_vsex: baseUrl + '/amd/assets/monaco-editor-ex'\n                }\n            });\n            // Load monaco on demand\n            require(['tiny_codepro_vsex', 'vs/editor/editor.main'], function(MonacoEditorEx) {\n                console.log(\"requirejs resolves\", window.monaco, monaco, MonacoEditorEx);\n                // Apply extensions into monaco editor\n                MonacoEditorEx.useMonacoEx(window.monaco);\n                resolve(window.monaco);\n            });\n        } else {\n            resolve(window.monaco);\n        }\n    });\n};\n"],"names":["editor","displayDialogue","async","data","elementid","id","modal","ModalFactory","create","type","CodeProModal","TYPE","templateContext","large","console","log","getRoot","find","css","maxWidth","margin","header","hide","footer","show","monaco","lazyLoadMonaco","vseditor","body","value","getContent","language","automaticLayout","theme","onresize","layout","on","evt","target","classList","contains","newContent","getValue","setContent","format","dispose","destroy","ModalEvents","hidden","Promise","resolve","window","MonacoEditorEx","require","config","paths","vs","baseUrl","tiny_codepro_vsex","useMonacoEx"],"mappings":";;;;;;;gQAkC6BA,SAEzBC,gBAAgBD,eAGdC,gBAAkBC,MAAAA,eAEdC,KAAO,CACTC,UAFc,WAAaJ,OAAOK,IAMhCC,YAAcC,uBAAaC,OAAO,CAChCC,KAAMC,eAAaC,KACnBC,gBAAiBT,KACjBU,OAAO,IAEXC,QAAQC,IAAI,oBAAqBT,MAAOA,MAAMU,WAC9CV,MAAMU,UAAUC,KAAK,oBAAoBC,IAAI,CACzCC,SAAU,OACVC,OAAQ,IAEZd,MAAMe,OAAOC,OACbhB,MAAMiB,OAAOC,aAEPC,aAAeC,iBAErBZ,QAAQC,IAAI,6BACNY,SAAWF,OAAOzB,OAAOQ,OAAOF,MAAMsB,KAAKX,KAAK,YAAcjB,OAAOK,IAAI,GAAI,CAC/EwB,MAAO7B,OAAO8B,aACdC,SAAU,OACVC,iBAAiB,EACjBC,MAAO,aAEX3B,MAAM4B,SAAW,WACbP,SAASQ,UAEb7B,MAAMiB,OAAON,KAAK,cAAcmB,GAAG,SAAUC,SACrCA,IAAIC,OAAOC,UAAUC,SAAS,eAAgB,OACxCC,WAAad,SAASe,WAC5B5B,QAAQC,IAAI0B,YACZzC,OAAO2C,WAAWF,WAAY,CAACG,OAAQ,SAE3CtC,MAAMgB,OACNK,SAASkB,UACTvC,MAAMwC,aAEVxC,MAAMU,UAAUoB,GAAGW,sBAAYC,QAAQ,KACnCrB,SAASkB,UACTvC,MAAMwC,aAEVxC,MAAMkB,QAIRE,eAAiB,kBACZ,IAAIuB,SAASC,UACXC,OAAO1B,QAAW0B,OAAOC,eAe1BF,QAAQC,OAAO1B,SAdf4B,QAAQC,OAAO,CAACC,MACZ,CACIC,GAAIC,gBAAU,mCACdC,kBAAmBD,gBAAU,kCAIrCJ,QAAQ,CAAC,oBAAqB,0BAA0B,SAASD,gBAC7DtC,QAAQC,IAAI,qBAAsBoC,OAAO1B,OAAQA,OAAQ2B,gBAEzDA,eAAeO,YAAYR,OAAO1B,QAClCyB,QAAQC,OAAO1B"}